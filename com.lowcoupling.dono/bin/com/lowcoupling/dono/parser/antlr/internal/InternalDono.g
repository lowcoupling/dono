/*
* generated by Xtext
*/
grammar InternalDono;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.lowcoupling.dono.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.lowcoupling.dono.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.lowcoupling.dono.services.DonoGrammarAccess;

}

@parser::members {

 	private DonoGrammarAccess grammarAccess;
 	
    public InternalDonoParser(TokenStream input, DonoGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Doc";	
   	}
   	
   	@Override
   	protected DonoGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDoc
entryRuleDoc returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDocRule()); }
	 iv_ruleDoc=ruleDoc 
	 { $current=$iv_ruleDoc.current; } 
	 EOF 
;

// Rule Doc
ruleDoc returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='doc' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDocAccess().getDocKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDocAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDocRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)this_OPENCURLY_2=RULE_OPENCURLY
    { 
    newLeafNode(this_OPENCURLY_2, grammarAccess.getDocAccess().getOPENCURLYTerminalRuleCall_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDocAccess().getSectionsSectionParserRuleCall_3_0()); 
	    }
		lv_sections_3_0=ruleSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDocRule());
	        }
       		add(
       			$current, 
       			"sections",
        		lv_sections_3_0, 
        		"Section");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_CLOSECURLY_4=RULE_CLOSECURLY
    { 
    newLeafNode(this_CLOSECURLY_4, grammarAccess.getDocAccess().getCLOSECURLYTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleSection
entryRuleSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSectionRule()); }
	 iv_ruleSection=ruleSection 
	 { $current=$iv_ruleSection.current; } 
	 EOF 
;

// Rule Section
ruleSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='section' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSectionAccess().getSectionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSectionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='title' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSectionAccess().getTitleKeyword_2());
    }
(
(
		lv_title_3_0=RULE_STRING
		{
			newLeafNode(lv_title_3_0, grammarAccess.getSectionAccess().getTitleSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4='level' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSectionAccess().getLevelKeyword_4_0());
    }
(
(
		lv_level_5_0=RULE_INT
		{
			newLeafNode(lv_level_5_0, grammarAccess.getSectionAccess().getLevelINTTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"level",
        		lv_level_5_0, 
        		"INT");
	    }

)
))?(
(
		lv_pageBreak_6_0=	'pagebreak' 
    {
        newLeafNode(lv_pageBreak_6_0, grammarAccess.getSectionAccess().getPageBreakPagebreakKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSectionRule());
	        }
       		setWithLastConsumed($current, "pageBreak", lv_pageBreak_6_0, "pagebreak");
	    }

)
)?this_OPENCURLY_7=RULE_OPENCURLY
    { 
    newLeafNode(this_OPENCURLY_7, grammarAccess.getSectionAccess().getOPENCURLYTerminalRuleCall_6()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSectionAccess().getBodyDocItemParserRuleCall_7_0()); 
	    }
		lv_body_8_0=ruleDocItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSectionRule());
	        }
       		add(
       			$current, 
       			"body",
        		lv_body_8_0, 
        		"DocItem");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_CLOSECURLY_9=RULE_CLOSECURLY
    { 
    newLeafNode(this_CLOSECURLY_9, grammarAccess.getSectionAccess().getCLOSECURLYTerminalRuleCall_8()); 
    }
)
;





// Entry rule entryRuleDocItem
entryRuleDocItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDocItemRule()); }
	 iv_ruleDocItem=ruleDocItem 
	 { $current=$iv_ruleDocItem.current; } 
	 EOF 
;

// Rule DocItem
ruleDocItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDocItemAccess().getParagraphParserRuleCall_0()); 
    }
    this_Paragraph_0=ruleParagraph
    { 
        $current = $this_Paragraph_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDocItemAccess().getImageParserRuleCall_1()); 
    }
    this_Image_1=ruleImage
    { 
        $current = $this_Image_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleParagraphItem
entryRuleParagraphItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParagraphItemRule()); }
	 iv_ruleParagraphItem=ruleParagraphItem 
	 { $current=$iv_ruleParagraphItem.current; } 
	 EOF 
;

// Rule ParagraphItem
ruleParagraphItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getParagraphItemAccess().getTextParserRuleCall_0()); 
    }
    this_Text_0=ruleText
    { 
        $current = $this_Text_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParagraphItemAccess().getReferenceParserRuleCall_1()); 
    }
    this_Reference_1=ruleReference
    { 
        $current = $this_Reference_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleParagraph
entryRuleParagraph returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParagraphRule()); }
	 iv_ruleParagraph=ruleParagraph 
	 { $current=$iv_ruleParagraph.current; } 
	 EOF 
;

// Rule Paragraph
ruleParagraph returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_OPENCURLY_0=RULE_OPENCURLY
    { 
    newLeafNode(this_OPENCURLY_0, grammarAccess.getParagraphAccess().getOPENCURLYTerminalRuleCall_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParagraphAccess().getBodyParagraphItemParserRuleCall_1_0()); 
	    }
		lv_body_1_0=ruleParagraphItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParagraphRule());
	        }
       		add(
       			$current, 
       			"body",
        		lv_body_1_0, 
        		"ParagraphItem");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_CLOSECURLY_2=RULE_CLOSECURLY
    { 
    newLeafNode(this_CLOSECURLY_2, grammarAccess.getParagraphAccess().getCLOSECURLYTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	 iv_ruleReference=ruleReference 
	 { $current=$iv_ruleReference.current; } 
	 EOF 
;

// Rule Reference
ruleReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getReferenceAccess().getSectionReferenceParserRuleCall_0()); 
    }
    this_SectionReference_0=ruleSectionReference
    { 
        $current = $this_SectionReference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getReferenceAccess().getImgReferenceParserRuleCall_1()); 
    }
    this_ImgReference_1=ruleImgReference
    { 
        $current = $this_ImgReference_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSectionReference
entryRuleSectionReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSectionReferenceRule()); }
	 iv_ruleSectionReference=ruleSectionReference 
	 { $current=$iv_ruleSectionReference.current; } 
	 EOF 
;

// Rule SectionReference
ruleSectionReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='secRef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSectionReferenceAccess().getSecRefKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSectionReferenceRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getSectionReferenceAccess().getRefSectionCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleImgReference
entryRuleImgReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImgReferenceRule()); }
	 iv_ruleImgReference=ruleImgReference 
	 { $current=$iv_ruleImgReference.current; } 
	 EOF 
;

// Rule ImgReference
ruleImgReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='imgRef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImgReferenceAccess().getImgRefKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getImgReferenceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getImgReferenceAccess().getRefImageCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleImage
entryRuleImage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImageRule()); }
	 iv_ruleImage=ruleImage 
	 { $current=$iv_ruleImage.current; } 
	 EOF 
;

// Rule Image
ruleImage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='image' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImageAccess().getImageKeyword_0());
    }
(
(
		lv_url_1_0=RULE_STRING
		{
			newLeafNode(lv_url_1_0, grammarAccess.getImageAccess().getUrlSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"url",
        		lv_url_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImageAccess().getNameKeyword_2());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getImageAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)	otherlv_4='caption' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getImageAccess().getCaptionKeyword_4());
    }
(
(
		lv_caption_5_0=RULE_STRING
		{
			newLeafNode(lv_caption_5_0, grammarAccess.getImageAccess().getCaptionSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"caption",
        		lv_caption_5_0, 
        		"STRING");
	    }

)
)((	otherlv_6='width' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getImageAccess().getWidthKeyword_6_0_0());
    }
(
(
		lv_width_7_0=RULE_INT
		{
			newLeafNode(lv_width_7_0, grammarAccess.getImageAccess().getWidthINTTerminalRuleCall_6_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_7_0, 
        		"INT");
	    }

)
))(	otherlv_8='height' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getImageAccess().getHeightKeyword_6_1_0());
    }
(
(
		lv_height_9_0=RULE_INT
		{
			newLeafNode(lv_height_9_0, grammarAccess.getImageAccess().getHeightINTTerminalRuleCall_6_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"height",
        		lv_height_9_0, 
        		"INT");
	    }

)
)))?this_ENDLINE_10=RULE_ENDLINE
    { 
    newLeafNode(this_ENDLINE_10, grammarAccess.getImageAccess().getENDLINETerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleText
entryRuleText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	 iv_ruleText=ruleText 
	 { $current=$iv_ruleText.current; } 
	 EOF 
;

// Rule Text
ruleText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_content_0_0=RULE_STRING
		{
			newLeafNode(lv_content_0_0, grammarAccess.getTextAccess().getContentSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"content",
        		lv_content_0_0, 
        		"STRING");
	    }

)
)
;





RULE_OPENCURLY : '{';

RULE_CLOSECURLY : '}';

RULE_ENDLINE : ';';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


